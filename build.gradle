//file:noinspection VulnerableLibrariesLocal

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.commandgeek'
version = '1.2.3'
description = 'GeekSMP'

repositories {
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'protocollib'
        url = 'https://repo.dmulloy2.net/repository/public/'
    }
    maven {
        name = 'minecraft-repo'
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    mavenCentral()
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'com.mojang:authlib:1.5.21'
    compileOnly 'me.clip:placeholderapi:2.11.1'
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.7.0'
    implementation 'org.javacord:javacord:3.4.0'
}

shadowJar {
    dependencies {
        exclude(dependency('org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'))
        exclude(dependency('io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'))
        exclude(dependency('com.mojang:authlib:1.5.21'))
        exclude(dependency('me.clip:placeholderapi:2.11.1'))
        exclude(dependency('com.comphenix.protocol:ProtocolLib:4.7.0'))

    }
}

jar {
    dependsOn('shadowJar')
    enabled = false
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
